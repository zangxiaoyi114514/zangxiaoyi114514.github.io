/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/
*,
:after,
:before {
    box-sizing: border-box;
    border: 0 solid #e5e7eb
}

:after,
:before {
    --tw-content: ""
}

:host,
html {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent
}

body {
    margin: 0;
    line-height: inherit
}

hr {
    height: 0;
    color: inherit;
    border-top-width: 1px
}

abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit
}

a {
    color: inherit;
    text-decoration: inherit
}

b,
strong {
    font-weight: bolder
}

code,
kbd,
pre,
samp {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size: 1em
}

small {
    font-size: 80%
}

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline
}

sub {
    bottom: -.25em
}

sup {
    top: -.5em
}

table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse
}

button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    color: inherit;
    margin: 0;
    padding: 0
}

button,
select {
    text-transform: none
}

[type=button],
[type=reset],
[type=submit],
button {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none
}

:-moz-focusring {
    outline: auto
}

:-moz-ui-invalid {
    box-shadow: none
}

progress {
    vertical-align: baseline
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto
}

[type=search] {
    -webkit-appearance: textfield;
    outline-offset: -2px
}

::-webkit-search-decoration {
    -webkit-appearance: none
}

::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit
}

summary {
    display: list-item
}

blockquote,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
p,
pre {
    margin: 0
}

fieldset {
    margin: 0
}

fieldset,
legend {
    padding: 0
}

menu,
ol,
ul {
    list-style: none;
    margin: 0;
    padding: 0
}

dialog {
    padding: 0
}

textarea {
    resize: vertical
}

input::-moz-placeholder,
textarea::-moz-placeholder {
    opacity: 1;
    color: #9ca3af
}

input::placeholder,
textarea::placeholder {
    opacity: 1;
    color: #9ca3af
}

[role=button],
button {
    cursor: pointer
}

:disabled {
    cursor: default
}

audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
    display: block;
    vertical-align: middle
}

img,
video {
    max-width: 100%;
    height: auto
}

[hidden] {
    display: none
}

:root,
[data-theme] {
    background-color: var(--fallback-b1, oklch(var(--b1)/1));
    color: var(--fallback-bc, oklch(var(--bc)/1))
}

@supports not (color:oklch(0% 0 0)) {
    :root {
        color-scheme: light;
        --fallback-p: #491eff;
        --fallback-pc: #d4dbff;
        --fallback-s: #ff41c7;
        --fallback-sc: #fff9fc;
        --fallback-a: #00cfbd;
        --fallback-ac: #00100d;
        --fallback-n: #2b3440;
        --fallback-nc: #d7dde4;
        --fallback-b1: #fff;
        --fallback-b2: #e5e6e6;
        --fallback-b3: #e5e6e6;
        --fallback-bc: #1f2937;
        --fallback-in: #00b3f0;
        --fallback-inc: #000;
        --fallback-su: #00ca92;
        --fallback-suc: #000;
        --fallback-wa: #ffc22d;
        --fallback-wac: #000;
        --fallback-er: #ff6f70;
        --fallback-erc: #000
    }

    @media (prefers-color-scheme:dark) {
        :root {
            color-scheme: dark;
            --fallback-p: #7582ff;
            --fallback-pc: #050617;
            --fallback-s: #ff71cf;
            --fallback-sc: #190211;
            --fallback-a: #00c7b5;
            --fallback-ac: #000e0c;
            --fallback-n: #2a323c;
            --fallback-nc: #a6adbb;
            --fallback-b1: #1d232a;
            --fallback-b2: #191e24;
            --fallback-b3: #15191e;
            --fallback-bc: #a6adbb;
            --fallback-in: #00b3f0;
            --fallback-inc: #000;
            --fallback-su: #00ca92;
            --fallback-suc: #000;
            --fallback-wa: #ffc22d;
            --fallback-wac: #000;
            --fallback-er: #ff6f70;
            --fallback-erc: #000
        }
    }
}

html {
    -webkit-tap-highlight-color: transparent
}

:root {
    color-scheme: light;
    --bc: 20% 0 0;
    --pc: 15.6521% 0 0;
    --sc: 15.6521% 0 0;
    --ac: 15.6521% 0 0;
    --nc: 18.8014% 0 0;
    --inc: 89.0403% 0.062643 264.052021;
    --suc: 90.395% 0.035372 142.495339;
    --wac: 14.1626% 0.019994 108.702381;
    --erc: 12.5591% 0.051537 29.233885;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    font-family: Chalkboard, comic sans ms, "sans-serif";
    --p: 78.2604% 0 0;
    --s: 78.2604% 0 0;
    --a: 78.2604% 0 0;
    --n: 94.007% 0 0;
    --b1: 100% 0 0;
    --b2: 94.9119% 0 0;
    --b3: 89.7547% 0 0;
    --in: 45.2014% 0.313214 264.052021;
    --su: 51.9752% 0.176858 142.495339;
    --wa: 70.8131% 0.099969 108.702381;
    --er: 62.7955% 0.257683 29.233885;
    --rounded-box: 0.2rem;
    --rounded-btn: 0.2rem;
    --rounded-badge: 0.2rem;
    --tab-radius: 0.2rem;
    --background: 200 20% 98%;
    --btn-background: 200 10% 91%;
    --btn-background-hover: 200 10% 89%;
    --foreground: 200 50% 3%
}

* {
    border-color: hsl(var(--foreground)/.2)
}

*,
:after,
:before {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgba(59, 130, 246, .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia:
}

::backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgba(59, 130, 246, .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia:
}

.avatar {
    position: relative;
    display: inline-flex
}

.avatar>div {
    display: block;
    aspect-ratio: 1/1;
    overflow: hidden
}

.avatar img {
    height: 100%;
    width: 100%;
    -o-object-fit: cover;
    object-fit: cover
}

.avatar.placeholder>div {
    display: flex
}

.avatar.placeholder>div,
.badge {
    align-items: center;
    justify-content: center
}

.badge {
    display: inline-flex;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    height: 1.25rem;
    font-size: .875rem;
    line-height: 1.25rem;
    width: -moz-fit-content;
    width: fit-content;
    padding-left: .563rem;
    padding-right: .563rem;
    border-radius: var(--rounded-badge, 1.9rem);
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)))
}

.breadcrumbs {
    max-width: 100%;
    overflow-x: auto;
    padding-top: .5rem;
    padding-bottom: .5rem
}

.breadcrumbs>ol,
.breadcrumbs>ul {
    display: flex;
    align-items: center;
    white-space: nowrap;
    min-height: -moz-min-content;
    min-height: min-content
}

.breadcrumbs>ol>li,
.breadcrumbs>ul>li {
    display: flex;
    align-items: center
}

.breadcrumbs>ol>li>a,
.breadcrumbs>ul>li>a {
    display: flex;
    cursor: pointer;
    align-items: center
}

@media (hover:hover) {

    .breadcrumbs>ol>li>a:hover,
    .breadcrumbs>ul>li>a:hover {
        text-decoration-line: underline
    }

    .label a:hover {
        --tw-text-opacity: 1;
        color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)))
    }

    .menu li>:not(ul, .menu-title, details, .btn).active,
    .menu li>:not(ul, .menu-title, details, .btn):active,
    .menu li>details>summary:active {
        --tw-bg-opacity: 1;
        background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-text-opacity: 1;
        color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)))
    }

    .table tr.hover:hover,
    .table tr.hover:nth-child(2n):hover {
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity)))
    }
}

.btn {
    display: inline-flex;
    height: 3rem;
    min-height: 3rem;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-radius: var(--rounded-btn, .5rem);
    border-color: transparent;
    border-color: oklch(var(--btn-color, var(--b2))/var(--tw-border-opacity));
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: .875rem;
    line-height: 1em;
    gap: .5rem;
    font-weight: 600;
    text-decoration-line: none;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, .25s) ease-out;
    transition-property: color, background-color, border-color, opacity, box-shadow, transform;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, .05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: var(--fallback-bc, oklch(var(--bc)/1));
    background-color: oklch(var(--btn-color, var(--b2))/var(--tw-bg-opacity));
    --tw-bg-opacity: 1;
    --tw-border-opacity: 1
}

.btn-disabled,
.btn:disabled,
.btn[disabled] {
    pointer-events: none
}

.btn-circle {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0
}

:where(.btn:is(input[type=checkbox])),
:where(.btn:is(input[type=radio])) {
    width: auto;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none
}

.btn:is(input[type=checkbox]):after,
.btn:is(input[type=radio]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content)
}

.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem)
}

.card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: var(--padding-card, 2rem);
    gap: .5rem
}

.card-body :where(p) {
    flex-grow: 1
}

.card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: .5rem
}

.card figure {
    display: flex;
    align-items: center;
    justify-content: center
}

.card.image-full {
    display: grid
}

.card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: .75
}

.card.image-full:before,
.card.image-full>* {
    grid-column-start: 1;
    grid-row-start: 1
}

.card.image-full>figure img {
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover
}

.card.image-full>.card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)))
}

.carousel {
    display: inline-flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    -ms-overflow-style: none;
    scrollbar-width: none
}

.checkbox {
    flex-shrink: 0;
    --chkbg: var(--fallback-bc, oklch(var(--bc)/1));
    --chkfg: var(--fallback-b1, oklch(var(--b1)/1));
    height: 1.5rem;
    width: 1.5rem;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-border-opacity)));
    --tw-border-opacity: 0.2
}

.divider {
    display: flex;
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    margin-top: 1rem;
    margin-bottom: 1rem;
    height: 1rem;
    white-space: nowrap
}

.divider:after,
.divider:before {
    height: .125rem;
    width: 100%;
    flex-grow: 1;
    --tw-content: "";
    content: var(--tw-content);
    background-color: var(--fallback-bc, oklch(var(--bc)/.1))
}

.dropdown {
    position: relative;
    display: inline-block
}

.dropdown>:not(summary):focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.dropdown .dropdown-content {
    position: absolute
}

.dropdown:is(:not(details)) .dropdown-content {
    visibility: hidden;
    opacity: 0;
    transform-origin: top;
    --tw-scale-x: .95;
    --tw-scale-y: .95;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s
}

.dropdown-end .dropdown-content {
    inset-inline-end: 0
}

.dropdown-left .dropdown-content {
    bottom: auto;
    inset-inline-end: 100%;
    top: 0;
    transform-origin: right
}

.dropdown-right .dropdown-content {
    bottom: auto;
    inset-inline-start: 100%;
    top: 0;
    transform-origin: left
}

.dropdown-bottom .dropdown-content {
    bottom: auto;
    top: 100%;
    transform-origin: top
}

.dropdown-top .dropdown-content {
    bottom: 100%;
    top: auto;
    transform-origin: bottom
}

.dropdown-end.dropdown-left .dropdown-content,
.dropdown-end.dropdown-right .dropdown-content {
    bottom: 0;
    top: auto
}

.dropdown.dropdown-open .dropdown-content,
.dropdown:focus-within .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content {
    visibility: visible;
    opacity: 1
}

@media (hover:hover) {
    .dropdown.dropdown-hover:hover .dropdown-content {
        visibility: visible;
        opacity: 1
    }

    .btm-nav>.disabled:hover,
    .btm-nav>[disabled]:hover {
        pointer-events: none;
        --tw-border-opacity: 0;
        background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-bg-opacity: 0.1;
        color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
        --tw-text-opacity: 0.2
    }

    .btn:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-b3, oklch(var(--b3)/var(--tw-border-opacity)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b3, oklch(var(--b3)/var(--tw-bg-opacity)))
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn:hover {
            background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2))/var(--tw-bg-opacity, 1)) 90%, #000);
            border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2))/var(--tw-border-opacity, 1)) 90%, #000)
        }
    }

    @supports not (color:oklch(0% 0 0)) {
        .btn:hover {
            background-color: var(--btn-color, var(--fallback-b2));
            border-color: var(--btn-color, var(--fallback-b2))
        }
    }

    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%
    }

    .btn-ghost:hover {
        border-color: transparent
    }

    @supports (color:oklch(0% 0 0)) {
        .btn-ghost:hover {
            background-color: var(--fallback-bc, oklch(var(--bc)/.2))
        }
    }

    .btn-disabled:hover,
    .btn:disabled:hover,
    .btn[disabled]:hover {
        --tw-border-opacity: 0;
        background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-bg-opacity: 0.2;
        color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
        --tw-text-opacity: 0.2
    }

    @supports (color:color-mix(in oklab, black, black)) {

        .btn:is(input[type=checkbox]:checked):hover,
        .btn:is(input[type=radio]:checked):hover {
            background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000)
        }
    }

    .dropdown.dropdown-hover:hover .dropdown-content {
        --tw-scale-x: 1;
        --tw-scale-y: 1;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    :where(.menu li:not(.menu-title, .disabled)>:not(ul, details, .menu-title)):not(.active, .btn):hover,
    :where(.menu li:not(.menu-title, .disabled)>details>summary:not(.menu-title)):not(.active, .btn):hover {
        cursor: pointer;
        outline: 2px solid transparent;
        outline-offset: 2px
    }

    @supports (color:oklch(0% 0 0)) {

        :where(.menu li:not(.menu-title, .disabled)>:not(ul, details, .menu-title)):not(.active, .btn):hover,
        :where(.menu li:not(.menu-title, .disabled)>details>summary:not(.menu-title)):not(.active, .btn):hover {
            background-color: var(--fallback-bc, oklch(var(--bc)/.1))
        }
    }
}

.dropdown:is(details) summary::-webkit-details-marker {
    display: none
}

.file-input {
    height: 3rem;
    flex-shrink: 1;
    padding-inline-end: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    overflow: hidden;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-border-opacity)));
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)))
}

.file-input::file-selector-button {
    margin-inline-end: 1rem;
    display: inline-flex;
    height: 100%;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: .875rem;
    line-height: 1.25rem;
    line-height: 1em;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    border-style: solid;
    --tw-border-opacity: 1;
    border-color: var(--fallback-n, oklch(var(--n)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    font-weight: 600;
    text-transform: uppercase;
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)));
    text-decoration-line: none;
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, .25s) ease-out
}

.footer {
    width: 100%;
    grid-auto-flow: row;
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    row-gap: 2.5rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.footer,
.footer>* {
    display: grid;
    place-items: start
}

.footer>* {
    gap: .5rem
}

@media (min-width:48rem) {
    .footer {
        grid-auto-flow: column
    }

    .footer-center {
        grid-auto-flow: row dense
    }
}

.form-control {
    display: flex;
    flex-direction: column
}

.label {
    display: flex;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    align-items: center;
    justify-content: space-between;
    padding: .5rem .25rem
}

.hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: 50%
}

.hero>* {
    grid-column-start: 1;
    grid-row-start: 1
}

.hero-content {
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: 80rem;
    gap: 1rem;
    padding: 1rem
}

.input {
    flex-shrink: 1;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)))
}

.input-md[type=number]::-webkit-inner-spin-button,
.input[type=number]::-webkit-inner-spin-button {
    margin-top: -1rem;
    margin-bottom: -1rem;
    margin-inline-end: -1rem
}

.join {
    display: inline-flex;
    align-items: stretch;
    border-radius: var(--rounded-btn, .5rem)
}

.join :where(.join-item) {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-start-radius: 0
}

.join .join-item:not(:first-child):not(:last-child),
.join :not(:first-child):not(:last-child) .join-item {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-start-radius: 0
}

.join .join-item:first-child:not(:last-child),
.join :first-child:not(:last-child) .join-item {
    border-start-end-radius: 0;
    border-end-end-radius: 0
}

.join .dropdown .join-item:first-child:not(:last-child),
.join :first-child:not(:last-child) .dropdown .join-item {
    border-start-end-radius: inherit;
    border-end-end-radius: inherit
}

.join :where(.join-item:first-child:not(:last-child)),
.join :where(:first-child:not(:last-child) .join-item) {
    border-end-start-radius: inherit;
    border-start-start-radius: inherit
}

.join .join-item:last-child:not(:first-child),
.join :last-child:not(:first-child) .join-item {
    border-end-start-radius: 0;
    border-start-start-radius: 0
}

.join :where(.join-item:last-child:not(:first-child)),
.join :where(:last-child:not(:first-child) .join-item) {
    border-start-end-radius: inherit;
    border-end-end-radius: inherit
}

@supports not selector(:has(*)) {
    :where(.join *) {
        border-radius: inherit
    }
}

@supports selector(:has(*)) {
    :where(.join :has(.join-item)) {
        border-radius: inherit
    }
}

.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    font-size: .875rem;
    line-height: 1.25rem;
    padding: .5rem
}

.menu :where(li ul) {
    position: relative;
    white-space: nowrap;
    margin-inline-start: 1rem;
    padding-inline-start: .5rem
}

.menu :where(li:not(.menu-title)>:not(ul, details, .menu-title, .btn)),
.menu :where(li:not(.menu-title)>details>summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none
}

.menu li.disabled {
    cursor: not-allowed;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    color: var(--fallback-bc, oklch(var(--bc)/.3))
}

.menu :where(li>.menu-dropdown:not(.menu-dropdown-show)) {
    display: none
}

:where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch
}

:where(.menu li) .badge {
    justify-self: end
}

.modal {
    pointer-events: none;
    position: fixed;
    inset: 0;
    margin: 0;
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    justify-items: center;
    padding: 0;
    opacity: 0;
    overscroll-behavior: contain;
    z-index: 999;
    background-color: transparent;
    color: inherit;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-property: transform, opacity, visibility;
    overflow-y: hidden
}

:where(.modal) {
    align-items: center
}

.modal-box {
    max-height: calc(100vh - 5em);
    grid-column-start: 1;
    grid-row-start: 1;
    width: 91.666667%;
    max-width: 32rem;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)));
    padding: 1.5rem;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, .25);
    overflow-y: auto;
    overscroll-behavior: contain
}

.modal-open,
.modal-toggle:checked+.modal,
.modal:target,
.modal[open] {
    pointer-events: auto;
    visibility: visible;
    opacity: 1
}

:root:has(:is(.modal-open, .modal:target, .modal-toggle:checked+.modal, .modal[open])) {
    overflow: hidden
}

.navbar {
    display: flex;
    align-items: center;
    padding: var(--navbar-padding, .5rem);
    min-height: 4rem;
    width: 100%
}

:where(.navbar>:not(script, style)) {
    display: inline-flex;
    align-items: center
}

.navbar-start {
    width: 50%;
    justify-content: flex-start
}

.navbar-center {
    flex-shrink: 0
}

.navbar-end {
    width: 50%;
    justify-content: flex-end
}

.radio {
    flex-shrink: 0;
    --chkbg: var(--bc);
    width: 1.5rem;
    -webkit-appearance: none;
    border-radius: 9999px;
    border-width: 1px;
    border-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-border-opacity)));
    --tw-border-opacity: 0.2
}

.radio,
.range {
    height: 1.5rem;
    cursor: pointer;
    -moz-appearance: none;
    appearance: none
}

.range {
    width: 100%;
    -webkit-appearance: none;
    --range-shdw: var(--fallback-bc, oklch(var(--bc)/1));
    overflow: hidden;
    border-radius: var(--rounded-box, 1rem);
    background-color: transparent
}

.range:focus {
    outline: none
}

.select {
    display: inline-flex;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 3rem;
    min-height: 3rem;
    padding-left: 1rem;
    padding-right: 2.5rem;
    font-size: .875rem;
    line-height: 1.25rem;
    line-height: 2;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)));
    background-image: linear-gradient(45deg, transparent 50%, currentColor 0), linear-gradient(135deg, currentColor 50%, transparent 0);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px, 4px 4px;
    background-repeat: no-repeat
}

.select[multiple] {
    height: auto
}

.steps {
    display: inline-grid;
    grid-auto-flow: column;
    overflow: hidden;
    overflow-x: auto;
    counter-reset: step;
    grid-auto-columns: 1fr
}

.steps .step {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-columns: auto;
    grid-template-rows: repeat(2, minmax(0, 1fr));
    grid-template-rows: 40px 1fr;
    place-items: center;
    text-align: center;
    min-width: 4rem
}

.table {
    position: relative;
    width: 100%;
    border-radius: var(--rounded-box, 1rem);
    text-align: left;
    font-size: .875rem;
    line-height: 1.25rem
}

.table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: 0;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)))
}

.table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: 0;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)))
}

.table :where(.table-pin-cols tr th) {
    position: sticky;
    left: 0;
    right: 0;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)))
}

.toggle {
    flex-shrink: 0;
    --tglbg: var(--fallback-b1, oklch(var(--b1)/1));
    --handleoffset: 1.5rem;
    --handleoffsetcalculator: calc(var(--handleoffset) * -1);
    --togglehandleborder: 0 0;
    height: 1.5rem;
    width: 3rem;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-radius: var(--rounded-badge, 1.9rem);
    border-width: 1px;
    border-color: currentColor;
    background-color: currentColor;
    color: var(--fallback-bc, oklch(var(--bc)/.5));
    transition: background, box-shadow var(--animation-input, .2s) ease-out;
    box-shadow: var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset, 0 0 0 2px var(--tglbg) inset, var(--togglehandleborder)
}

.avatar-group :where(.avatar) {
    overflow: hidden;
    border-radius: 9999px;
    border-width: 4px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-border-opacity)))
}

.badge-secondary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s, oklch(var(--s)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-s, oklch(var(--s)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-sc, oklch(var(--sc)/var(--tw-text-opacity)))
}

.badge-outline {
    border-color: currentColor;
    --tw-border-opacity: 0.5;
    background-color: transparent;
    color: currentColor
}

.badge-outline.badge-neutral {
    --tw-text-opacity: 1;
    color: var(--fallback-n, oklch(var(--n)/var(--tw-text-opacity)))
}

.badge-outline.badge-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-p, oklch(var(--p)/var(--tw-text-opacity)))
}

.badge-outline.badge-secondary {
    --tw-text-opacity: 1;
    color: var(--fallback-s, oklch(var(--s)/var(--tw-text-opacity)))
}

.badge-outline.badge-accent {
    --tw-text-opacity: 1;
    color: var(--fallback-a, oklch(var(--a)/var(--tw-text-opacity)))
}

.badge-outline.badge-info {
    --tw-text-opacity: 1;
    color: var(--fallback-in, oklch(var(--in)/var(--tw-text-opacity)))
}

.badge-outline.badge-success {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su)/var(--tw-text-opacity)))
}

.badge-outline.badge-warning {
    --tw-text-opacity: 1;
    color: var(--fallback-wa, oklch(var(--wa)/var(--tw-text-opacity)))
}

.badge-outline.badge-error {
    --tw-text-opacity: 1;
    color: var(--fallback-er, oklch(var(--er)/var(--tw-text-opacity)))
}

.btm-nav>.disabled,
.btm-nav>[disabled] {
    pointer-events: none;
    --tw-border-opacity: 0;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2
}

.btm-nav>* .label {
    font-size: 1rem;
    line-height: 1.5rem
}

.breadcrumbs>ol>li>a:focus,
.breadcrumbs>ul>li>a:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.breadcrumbs>ol>li>a:focus-visible,
.breadcrumbs>ul>li>a:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

.breadcrumbs>ol>li+:before,
.breadcrumbs>ul>li+:before {
    content: "";
    margin-left: .5rem;
    margin-right: .75rem;
    display: block;
    height: .375rem;
    width: .375rem;
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    opacity: .4;
    border-top: 1px solid;
    border-right: 1px solid;
    background-color: transparent
}

[dir=rtl] .breadcrumbs>ol>li+:before,
[dir=rtl] .breadcrumbs>ul>li+:before {
    --tw-rotate: -135deg
}

.btn:active:focus,
.btn:active:hover {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, .97))
}

@supports not (color:oklch(0% 0 0)) {
    .btn {
        background-color: var(--btn-color, var(--fallback-b2));
        border-color: var(--btn-color, var(--fallback-b2))
    }

    .prose :where(code):not(:where([class~=not-prose] *, pre *)) {
        background-color: var(--fallback-b3, oklch(var(--b3)/1))
    }
}

@supports (color:color-mix(in oklab, black, black)) {
    .btn-active {
        background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b3))/var(--tw-bg-opacity, 1)) 90%, #000);
        border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b3))/var(--tw-border-opacity, 1)) 90%, #000)
    }

    .btn-outline.btn-primary.btn-active {
        background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000)
    }

    .btn-outline.btn-secondary.btn-active {
        background-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s)/1)) 90%, #000)
    }

    .btn-outline.btn-accent.btn-active {
        background-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a)/1)) 90%, #000)
    }

    .btn-outline.btn-success.btn-active {
        background-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su)/1)) 90%, #000)
    }

    .btn-outline.btn-info.btn-active {
        background-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in)/1)) 90%, #000)
    }

    .btn-outline.btn-warning.btn-active {
        background-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa)/1)) 90%, #000)
    }

    .btn-outline.btn-error.btn-active {
        background-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er)/1)) 90%, #000)
    }
}

.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px
}

.btn.glass {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor
}

.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%
}

.btn-ghost {
    border-width: 1px;
    border-color: transparent;
    background-color: transparent;
    color: currentColor;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor
}

.btn-ghost.btn-active {
    border-color: transparent;
    background-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.btn-link.btn-active {
    border-color: transparent;
    background-color: transparent;
    text-decoration-line: underline
}

.btn-outline.btn-active {
    --tw-border-opacity: 1;
    border-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-b1, oklch(var(--b1)/var(--tw-text-opacity)))
}

.btn-outline.btn-primary.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity)))
}

.btn-outline.btn-secondary.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-sc, oklch(var(--sc)/var(--tw-text-opacity)))
}

.btn-outline.btn-accent.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-ac, oklch(var(--ac)/var(--tw-text-opacity)))
}

.btn-outline.btn-success.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-suc, oklch(var(--suc)/var(--tw-text-opacity)))
}

.btn-outline.btn-info.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-inc, oklch(var(--inc)/var(--tw-text-opacity)))
}

.btn-outline.btn-warning.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-wac, oklch(var(--wac)/var(--tw-text-opacity)))
}

.btn-outline.btn-error.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-erc, oklch(var(--erc)/var(--tw-text-opacity)))
}

.btn.btn-disabled,
.btn:disabled,
.btn[disabled] {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2
}

.btn:is(input[type=checkbox]:checked),
.btn:is(input[type=radio]:checked) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity)))
}

.btn:is(input[type=checkbox]:checked):focus-visible,
.btn:is(input[type=radio]:checked):focus-visible {
    outline-color: var(--fallback-p, oklch(var(--p)/1))
}

@keyframes button-pop {
    0% {
        transform: scale(var(--btn-focus-scale, .98))
    }

    40% {
        transform: scale(1.02)
    }

    to {
        transform: scale(1)
    }
}

.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset
}

.card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit
}

.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

.card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-border-opacity)))
}

.card.compact .card-body {
    padding: 1rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.card-title {
    display: flex;
    align-items: center;
    gap: .5rem;
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 600
}

.card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit
}

.carousel::-webkit-scrollbar {
    display: none
}

.checkbox:focus {
    box-shadow: none
}

.checkbox:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/1))
}

.checkbox:checked,
.checkbox[aria-checked=true] {
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, .2s) ease-out;
    background-color: var(--chkbg);
    background-image: linear-gradient(-45deg, transparent 65%, var(--chkbg) 65.99%), linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%), linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%), linear-gradient(45deg, var(--chkbg) 30%, var(--chkfg) 30.99%, var(--chkfg) 40%, transparent 40.99%), linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%)
}

.checkbox:indeterminate {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-bg-opacity)));
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, .2s) ease-out;
    background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%), linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%), linear-gradient(0deg, var(--chkbg) 43%, var(--chkfg) 43%, var(--chkfg) 57%, var(--chkbg) 57%)
}

.checkbox:disabled {
    cursor: not-allowed;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-bg-opacity)));
    opacity: .2
}

@keyframes checkmark {
    0% {
        background-position-y: 5px
    }

    50% {
        background-position-y: -2px
    }

    to {
        background-position-y: 0
    }
}

.divider:not(:empty) {
    gap: 1rem
}

.dropdown.dropdown-open .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.file-input-bordered {
    --tw-border-opacity: 0.2
}

.file-input:focus {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.file-input-disabled,
.file-input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity)));
    --tw-text-opacity: 0.2
}

.file-input-disabled::-moz-placeholder,
.file-input[disabled]::-moz-placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2
}

.file-input-disabled::placeholder,
.file-input[disabled]::placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2
}

.file-input-disabled::file-selector-button,
.file-input[disabled]::file-selector-button {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2
}

.label-text {
    font-size: .875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)))
}

.input input {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p)/var(--tw-bg-opacity)));
    background-color: transparent
}

.input input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em
}

.input-bordered {
    border-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.input:focus,
.input:focus-within {
    box-shadow: none;
    border-color: var(--fallback-bc, oklch(var(--bc)/.2));
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.input-primary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity)))
}

.input-primary:focus,
.input-primary:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity)));
    outline-color: var(--fallback-p, oklch(var(--p)/1))
}

.input-disabled,
.input:disabled,
.input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity)));
    color: var(--fallback-bc, oklch(var(--bc)/.4))
}

.input-disabled::-moz-placeholder,
.input:disabled::-moz-placeholder,
.input[disabled]::-moz-placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2
}

.input-disabled::placeholder,
.input:disabled::placeholder,
.input[disabled]::placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2
}

.input::-webkit-date-and-time-value {
    text-align: inherit
}

.join>:where(:not(:first-child)) {
    margin-top: 0;
    margin-bottom: 0;
    margin-inline-start: -1px
}

.join-item:focus {
    isolation: isolate
}

.loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1/1;
    width: 1.5rem;
    background-color: currentColor;
    -webkit-mask-size: 100%;
    mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center
}

.loading,
.loading-spinner {
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E")
}

.loading-md {
    width: 1.5rem
}

:where(.menu li:empty) {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-bg-opacity)));
    opacity: .1;
    margin: .5rem 1rem;
    height: 1px
}

.menu :where(li ul):before {
    position: absolute;
    bottom: .75rem;
    inset-inline-start: 0;
    top: .75rem;
    width: 1px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-bg-opacity)));
    opacity: .1;
    content: ""
}

.menu :where(li:not(.menu-title)>:not(ul, details, .menu-title, .btn)),
.menu :where(li:not(.menu-title)>details>summary:not(.menu-title)) {
    border-radius: var(--rounded-btn, .5rem);
    padding: .5rem 1rem;
    text-align: start;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    text-wrap: balance
}

:where(.menu li:not(.menu-title, .disabled)>:not(ul, details, .menu-title)):is(summary):not(.active, .btn):focus-visible,
:where(.menu li:not(.menu-title, .disabled)>:not(ul, details, .menu-title)):not(summary, .active, .btn).focus,
:where(.menu li:not(.menu-title, .disabled)>:not(ul, details, .menu-title)):not(summary, .active, .btn):focus,
:where(.menu li:not(.menu-title, .disabled)>details>summary:not(.menu-title)):is(summary):not(.active, .btn):focus-visible,
:where(.menu li:not(.menu-title, .disabled)>details>summary:not(.menu-title)):not(summary, .active, .btn).focus,
:where(.menu li:not(.menu-title, .disabled)>details>summary:not(.menu-title)):not(summary, .active, .btn):focus {
    cursor: pointer;
    background-color: var(--fallback-bc, oklch(var(--bc)/.1));
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    outline: 2px solid transparent;
    outline-offset: 2px
}

.menu li>:not(ul, .menu-title, details, .btn).active,
.menu li>:not(ul, .menu-title, details, .btn):active,
.menu li>details>summary:active {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)))
}

.menu :where(li>details>summary)::-webkit-details-marker {
    display: none
}

.menu :where(li>.menu-dropdown-toggle):after,
.menu :where(li>details>summary):after {
    justify-self: end;
    display: block;
    margin-top: -.5rem;
    height: .5rem;
    width: .5rem;
    transform: rotate(45deg);
    transition-property: transform, margin-top;
    transition-duration: .3s;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    content: "";
    transform-origin: 75% 75%;
    box-shadow: 2px 2px;
    pointer-events: none
}

.menu :where(li>.menu-dropdown-toggle.menu-dropdown-show):after,
.menu :where(li>details[open]>summary):after {
    transform: rotate(225deg);
    margin-top: 0
}

.mockup-browser .mockup-browser-toolbar .input {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    display: block;
    height: 1.75rem;
    width: 24rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity)));
    padding-left: 2rem;
    direction: ltr
}

.mockup-browser .mockup-browser-toolbar .input:before {
    left: .5rem;
    aspect-ratio: 1/1;
    height: .75rem;
    --tw-translate-y: -50%;
    border-radius: 9999px;
    border-width: 2px;
    border-color: currentColor
}

.mockup-browser .mockup-browser-toolbar .input:after,
.mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    position: absolute;
    top: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    opacity: .6
}

.mockup-browser .mockup-browser-toolbar .input:after {
    left: 1.25rem;
    height: .5rem;
    --tw-translate-y: 25%;
    --tw-rotate: -45deg;
    border-radius: 9999px;
    border-width: 1px;
    border-color: currentColor
}

.modal::backdrop,
.modal:not(dialog:not(.modal-open)) {
    background-color: #0006;
    animation: modal-pop .2s ease-out
}

.modal-backdrop {
    z-index: -1;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    align-self: stretch;
    justify-self: stretch;
    color: transparent
}

.modal-open .modal-box,
.modal-toggle:checked+.modal .modal-box,
.modal:target .modal-box,
.modal[open] .modal-box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

@keyframes modal-pop {
    0% {
        opacity: 0
    }
}

@keyframes progress-loading {
    50% {
        background-position-x: -115%
    }
}

.radio:focus {
    box-shadow: none
}

.radio:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/1))
}

.radio:checked,
.radio[aria-checked=true] {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-bg-opacity)));
    background-image: none;
    animation: radiomark var(--animation-input, .2s) ease-out;
    box-shadow: 0 0 0 4px var(--fallback-b1, oklch(var(--b1)/1)) inset, 0 0 0 4px var(--fallback-b1, oklch(var(--b1)/1)) inset
}

.radio:disabled {
    cursor: not-allowed;
    opacity: .2
}

@keyframes radiomark {
    0% {
        box-shadow: 0 0 0 12px var(--fallback-b1, oklch(var(--b1)/1)) inset, 0 0 0 12px var(--fallback-b1, oklch(var(--b1)/1)) inset
    }

    50% {
        box-shadow: 0 0 0 3px var(--fallback-b1, oklch(var(--b1)/1)) inset, 0 0 0 3px var(--fallback-b1, oklch(var(--b1)/1)) inset
    }

    to {
        box-shadow: 0 0 0 4px var(--fallback-b1, oklch(var(--b1)/1)) inset, 0 0 0 4px var(--fallback-b1, oklch(var(--b1)/1)) inset
    }
}

.range:focus-visible::-webkit-slider-thumb {
    --focus-shadow: 0 0 0 6px var(--fallback-b1, oklch(var(--b1)/1)) inset, 0 0 0 2rem var(--range-shdw) inset
}

.range:focus-visible::-moz-range-thumb {
    --focus-shadow: 0 0 0 6px var(--fallback-b1, oklch(var(--b1)/1)) inset, 0 0 0 2rem var(--range-shdw) inset
}

.range::-webkit-slider-runnable-track {
    height: .5rem;
    width: 100%;
    border-radius: var(--rounded-box, 1rem);
    background-color: var(--fallback-bc, oklch(var(--bc)/.1))
}

.range::-moz-range-track {
    height: .5rem;
    width: 100%;
    border-radius: var(--rounded-box, 1rem);
    background-color: var(--fallback-bc, oklch(var(--bc)/.1))
}

.range::-webkit-slider-thumb {
    position: relative;
    height: 1.5rem;
    width: 1.5rem;
    border-radius: var(--rounded-box, 1rem);
    border-style: none;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)));
    appearance: none;
    -webkit-appearance: none;
    top: 50%;
    color: var(--range-shdw);
    transform: translateY(-50%);
    --filler-size: 100rem;
    --filler-offset: 0.6rem;
    box-shadow: 0 0 0 3px var(--range-shdw) inset, var(--focus-shadow, 0 0), calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size)
}

.range::-moz-range-thumb {
    position: relative;
    height: 1.5rem;
    width: 1.5rem;
    border-radius: var(--rounded-box, 1rem);
    border-style: none;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)));
    top: 50%;
    color: var(--range-shdw);
    --filler-size: 100rem;
    --filler-offset: 0.5rem;
    box-shadow: 0 0 0 3px var(--range-shdw) inset, var(--focus-shadow, 0 0), calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size)
}

@keyframes rating-pop {
    0% {
        transform: translateY(-.125em)
    }

    40% {
        transform: translateY(-.125em)
    }

    to {
        transform: translateY(0)
    }
}

.select:focus {
    box-shadow: none;
    border-color: var(--fallback-bc, oklch(var(--bc)/.2));
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.select-primary,
.select-primary:focus {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity)))
}

.select-primary:focus {
    outline-color: var(--fallback-p, oklch(var(--p)/1))
}

.select-disabled,
.select:disabled,
.select[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity)));
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2
}

.select-disabled::-moz-placeholder,
.select:disabled::-moz-placeholder,
.select[disabled]::-moz-placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2
}

.select-disabled::placeholder,
.select:disabled::placeholder,
.select[disabled]::placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2
}

.select-multiple,
.select[multiple],
.select[size].select:not([size="1"]) {
    background-image: none;
    padding-right: 1rem
}

[dir=rtl] .select {
    background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%)
}

@keyframes skeleton {
    0% {
        background-position: 150%
    }

    to {
        background-position: -50%
    }
}

.steps .step:before {
    top: 0;
    height: .5rem;
    width: 100%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    content: "";
    margin-inline-start: -100%
}

.steps .step:after,
.steps .step:before {
    grid-column-start: 1;
    grid-row-start: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3, oklch(var(--b3)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1
}

.steps .step:after {
    content: counter(step);
    counter-increment: step;
    z-index: 1;
    position: relative;
    display: grid;
    height: 2rem;
    width: 2rem;
    place-items: center;
    place-self: center;
    border-radius: 9999px;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)))
}

.steps .step:first-child:before {
    content: none
}

.steps .step[data-content]:after {
    content: attr(data-content)
}

.steps .step-neutral+.step-neutral:before,
.steps .step-neutral:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)))
}

.steps .step-primary+.step-primary:before,
.steps .step-primary:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity)))
}

.steps .step-secondary+.step-secondary:before,
.steps .step-secondary:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-s, oklch(var(--s)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-sc, oklch(var(--sc)/var(--tw-text-opacity)))
}

.steps .step-accent+.step-accent:before,
.steps .step-accent:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-a, oklch(var(--a)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-ac, oklch(var(--ac)/var(--tw-text-opacity)))
}

.steps .step-info+.step-info:before,
.steps .step-info:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-in, oklch(var(--in)/var(--tw-bg-opacity)))
}

.steps .step-info:after {
    --tw-text-opacity: 1;
    color: var(--fallback-inc, oklch(var(--inc)/var(--tw-text-opacity)))
}

.steps .step-success+.step-success:before,
.steps .step-success:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su, oklch(var(--su)/var(--tw-bg-opacity)))
}

.steps .step-success:after {
    --tw-text-opacity: 1;
    color: var(--fallback-suc, oklch(var(--suc)/var(--tw-text-opacity)))
}

.steps .step-warning+.step-warning:before,
.steps .step-warning:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-wa, oklch(var(--wa)/var(--tw-bg-opacity)))
}

.steps .step-warning:after {
    --tw-text-opacity: 1;
    color: var(--fallback-wac, oklch(var(--wac)/var(--tw-text-opacity)))
}

.steps .step-error+.step-error:before,
.steps .step-error:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er, oklch(var(--er)/var(--tw-bg-opacity)))
}

.steps .step-error:after {
    --tw-text-opacity: 1;
    color: var(--fallback-erc, oklch(var(--erc)/var(--tw-text-opacity)))
}

:is([dir=rtl] .table) {
    text-align: right
}

.table :where(th, td) {
    padding: .75rem 1rem;
    vertical-align: middle
}

.table tr.active,
.table tr.active:nth-child(2n),
.table-zebra tbody tr:nth-child(2n) {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity)))
}

.table :where(thead, tbody) :where(tr:first-child:last-child),
.table :where(thead, tbody) :where(tr:not(:last-child)) {
    border-bottom-width: 1px;
    --tw-border-opacity: 1;
    border-bottom-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-border-opacity)))
}

.table :where(thead, tfoot) {
    white-space: nowrap;
    font-size: .75rem;
    line-height: 1rem;
    font-weight: 700;
    color: var(--fallback-bc, oklch(var(--bc)/.6))
}

@keyframes toast-pop {
    0% {
        transform: scale(.9);
        opacity: 0
    }

    to {
        transform: scale(1);
        opacity: 1
    }
}

[dir=rtl] .toggle {
    --handleoffsetcalculator: calc(var(--handleoffset) * 1)
}

.toggle:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.toggle:hover {
    background-color: currentColor
}

.toggle:checked,
.toggle[aria-checked=true] {
    background-image: none;
    --handleoffsetcalculator: var(--handleoffset);
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)))
}

[dir=rtl] .toggle:checked,
[dir=rtl] .toggle[aria-checked=true] {
    --handleoffsetcalculator: calc(var(--handleoffset) * -1)
}

.toggle:indeterminate {
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset, calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset, 0 0 0 2px var(--tglbg) inset
}

[dir=rtl] .toggle:indeterminate {
    box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset, calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset, 0 0 0 2px var(--tglbg) inset
}

.toggle:disabled {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-border-opacity)));
    background-color: transparent;
    opacity: .3;
    --togglehandleborder: 0 0 0 3px var(--fallback-bc, oklch(var(--bc)/1)) inset, var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc, oklch(var(--bc)/1)) inset
}

:root .prose {
    --tw-prose-body: var(--fallback-bc, oklch(var(--bc)/0.8));
    --tw-prose-headings: var(--fallback-bc, oklch(var(--bc)/1));
    --tw-prose-lead: var(--fallback-bc, oklch(var(--bc)/1));
    --tw-prose-links: var(--fallback-bc, oklch(var(--bc)/1));
    --tw-prose-bold: var(--fallback-bc, oklch(var(--bc)/1));
    --tw-prose-counters: var(--fallback-bc, oklch(var(--bc)/1));
    --tw-prose-bullets: var(--fallback-bc, oklch(var(--bc)/0.5));
    --tw-prose-hr: var(--fallback-bc, oklch(var(--bc)/0.2));
    --tw-prose-quotes: var(--fallback-bc, oklch(var(--bc)/1));
    --tw-prose-quote-borders: var(--fallback-bc, oklch(var(--bc)/0.2));
    --tw-prose-captions: var(--fallback-bc, oklch(var(--bc)/0.5));
    --tw-prose-code: var(--fallback-bc, oklch(var(--bc)/1));
    --tw-prose-pre-code: var(--fallback-nc, oklch(var(--nc)/1));
    --tw-prose-pre-bg: var(--fallback-n, oklch(var(--n)/1));
    --tw-prose-th-borders: var(--fallback-bc, oklch(var(--bc)/0.5));
    --tw-prose-td-borders: var(--fallback-bc, oklch(var(--bc)/0.2))
}

.prose :where(code):not(:where([class~=not-prose] *, pre *)) {
    padding: 1px 8px;
    border-radius: var(--rounded-badge);
    font-weight: 400;
    background-color: var(--fallback-bc, oklch(var(--bc)/.1))
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):after,
.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    display: none
}

.prose pre code {
    border-radius: 0;
    padding: 0
}

.prose :where(tbody tr, thead):not(:where([class~=not-prose] *)) {
    border-bottom-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.glass,
.glass.btn-active {
    border: none;
    -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
    backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: transparent;
    background-image: linear-gradient(135deg, rgb(255 255 255/var(--glass-opacity, 30%)) 0, transparent 100%), linear-gradient(var(--glass-reflex-degree, 100deg), rgb(255 255 255/var(--glass-reflex-opacity, 10%)) 25%, transparent 25%);
    box-shadow: 0 0 0 1px rgb(255 255 255/var(--glass-border-opacity, 10%)) inset, 0 0 0 2px rgb(0 0 0/5%);
    text-shadow: 0 1px rgb(0 0 0/var(--glass-text-shadow-opacity, 5%))
}

@media (hover:hover) {
    .glass.btn-active {
        border: none;
        -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
        backdrop-filter: blur(var(--glass-blur, 40px));
        background-color: transparent;
        background-image: linear-gradient(135deg, rgb(255 255 255/var(--glass-opacity, 30%)) 0, transparent 100%), linear-gradient(var(--glass-reflex-degree, 100deg), rgb(255 255 255/var(--glass-reflex-opacity, 10%)) 25%, transparent 25%);
        box-shadow: 0 0 0 1px rgb(255 255 255/var(--glass-border-opacity, 10%)) inset, 0 0 0 2px rgb(0 0 0/5%);
        text-shadow: 0 1px rgb(0 0 0/var(--glass-text-shadow-opacity, 5%))
    }
}

.btn-sm {
    height: 2rem;
    min-height: 2rem;
    padding-left: .75rem;
    padding-right: .75rem
}

.btn-md,
.btn-sm {
    font-size: .875rem
}

.btn-md {
    height: 3rem;
    min-height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem
}

.btn-square:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    padding: 0
}

.btn-square:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    padding: 0
}

.btn-circle:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    border-radius: 9999px;
    padding: 0
}

.btn-circle:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    border-radius: 9999px;
    padding: 0
}

.btn-circle:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0
}

.btn-circle:where(.btn-lg) {
    height: 4rem;
    width: 4rem;
    border-radius: 9999px;
    padding: 0
}

.join.join-vertical {
    flex-direction: column
}

.join.join-vertical .join-item:first-child:not(:last-child),
.join.join-vertical :first-child:not(:last-child) .join-item {
    border-end-start-radius: 0;
    border-end-end-radius: 0;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit
}

.join.join-vertical .join-item:last-child:not(:first-child),
.join.join-vertical :last-child:not(:first-child) .join-item {
    border-start-start-radius: 0;
    border-start-end-radius: 0;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit
}

.join.join-horizontal {
    flex-direction: row
}

.join.join-horizontal .join-item:first-child:not(:last-child),
.join.join-horizontal :first-child:not(:last-child) .join-item {
    border-end-end-radius: 0;
    border-start-end-radius: 0;
    border-end-start-radius: inherit;
    border-start-start-radius: inherit
}

.join.join-horizontal .join-item:last-child:not(:first-child),
.join.join-horizontal :last-child:not(:first-child) .join-item {
    border-end-start-radius: 0;
    border-start-start-radius: 0;
    border-end-end-radius: inherit;
    border-start-end-radius: inherit
}

.menu-horizontal {
    display: inline-flex;
    flex-direction: row
}

.menu-horizontal>li:not(.menu-title)>details>ul {
    position: absolute
}

.modal-top {
    place-items: start
}

.modal-bottom {
    place-items: end
}

.select-sm {
    height: 2rem;
    min-height: 2rem;
    padding-left: .75rem;
    padding-right: 2rem;
    font-size: .875rem;
    line-height: 2rem
}

[dir=rtl] .select-sm {
    padding-left: 2rem;
    padding-right: .75rem
}

.avatar.online:before {
    background-color: var(--fallback-su, oklch(var(--su)/var(--tw-bg-opacity)))
}

.avatar.offline:before,
.avatar.online:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    outline-style: solid;
    outline-width: 2px;
    outline-color: var(--fallback-b1, oklch(var(--b1)/1));
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%
}

.avatar.offline:before {
    background-color: var(--fallback-b3, oklch(var(--b3)/var(--tw-bg-opacity)))
}

.card-compact .card-body {
    padding: 1rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.card-compact .card-title {
    margin-bottom: .25rem
}

.card-normal .card-body {
    padding: var(--padding-card, 2rem);
    font-size: 1rem;
    line-height: 1.5rem
}

.card-normal .card-title {
    margin-bottom: .75rem
}

.join.join-vertical>:where(:not(:first-child)) {
    margin-left: 0;
    margin-right: 0;
    margin-top: -1px
}

.join.join-horizontal>:where(:not(:first-child)) {
    margin-top: 0;
    margin-bottom: 0;
    margin-inline-start: -1px
}

.menu-horizontal>li:not(.menu-title)>details>ul {
    margin-inline-start: 0;
    margin-top: 1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    padding-inline-end: .5rem
}

.menu-horizontal>li>details>ul:before {
    content: none
}

:where(.menu-horizontal>li:not(.menu-title)>details>ul) {
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)));
    --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, .1), 0 8px 10px -6px rgba(0, 0, 0, .1);
    --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.menu-sm :where(li:not(.menu-title)>:not(ul, details, .menu-title)),
.menu-sm :where(li:not(.menu-title)>details>summary:not(.menu-title)) {
    border-radius: var(--rounded-btn, .5rem);
    padding: .25rem .75rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.menu-sm .menu-title {
    padding: .5rem .75rem
}

.modal-top :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: -2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-top-left-radius: 0;
    border-top-right-radius: 0
}

.modal-middle :where(.modal-box) {
    width: 91.666667%;
    max-width: 32rem;
    --tw-translate-y: 0px;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem)
}

.modal-bottom :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: 2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0
}

.prose {
    color: var(--tw-prose-body);
    max-width: 65ch
}

.prose :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em
}

.prose :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em
}

.prose :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500
}

.prose :where(strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600
}

.prose :where(a strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(blockquote strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(thead th strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em
}

.prose :where(ol[type=A]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type=a]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type=A s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type=a s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type=I]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type=i]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type=I s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type=i s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type="1"]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: decimal
}

.prose :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em
}

.prose :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
    font-weight: 400;
    color: var(--tw-prose-counters)
}

.prose :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
    color: var(--tw-prose-bullets)
}

.prose :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em
}

.prose :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em
}

.prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-inline-start-width: .25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "\201C" "\201D" "\2018" "\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em
}

.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: open-quote
}

.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: close-quote
}

.prose :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: .8888889em;
    line-height: 1.1111111
}

.prose :where(h1 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 900;
    color: inherit
}

.prose :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333
}

.prose :where(h2 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 800;
    color: inherit
}

.prose :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: .6em;
    line-height: 1.6
}

.prose :where(h3 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 700;
    color: inherit
}

.prose :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: .5em;
    line-height: 1.5
}

.prose :where(h4 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 700;
    color: inherit
}

.prose :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 500;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows)/10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows)/10%);
    font-size: .875em;
    border-radius: .3125rem;
    padding-top: .1875em;
    padding-inline-end: .375em;
    padding-bottom: .1875em;
    padding-inline-start: .375em
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: .875em
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: "`"
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: "`"
}

.prose :where(a code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(h1 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-size: .875em
}

.prose :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-size: .9em
}

.prose :where(h4 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(blockquote code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(thead th code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: .875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: .375rem;
    padding-top: .8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: .8571429em;
    padding-inline-start: 1.1428571em
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: none
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: none
}

.prose :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
    width: 100%;
    table-layout: auto;
    text-align: start;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: .875em;
    line-height: 1.7142857
}

.prose :where(thead):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders)
}

.prose :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-inline-end: .5714286em;
    padding-bottom: .5714286em;
    padding-inline-start: .5714286em
}

.prose :where(tbody tr):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders)
}

.prose :where(tbody tr:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-width: 0
}

.prose :where(tbody td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    vertical-align: baseline
}

.prose :where(tfoot):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders)
}

.prose :where(tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    vertical-align: top
}

.prose :where(figure>*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
    margin-bottom: 0
}

.prose :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-captions);
    font-size: .875em;
    line-height: 1.4285714;
    margin-top: .8571429em
}

.prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-kbd: #111827;
    --tw-prose-kbd-shadows: 17 24 39;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgba(0, 0, 0, .5);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75
}

.prose :where(picture>img):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
    margin-bottom: 0
}

.prose :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: .5em;
    margin-bottom: .5em
}

.prose :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: .375em
}

.prose :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: .375em
}

.prose :where(.prose>ul>li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: .75em;
    margin-bottom: .75em
}

.prose :where(.prose>ul>li>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose :where(.prose>ul>li>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose :where(.prose>ol>li>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose :where(.prose>ol>li>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: .75em;
    margin-bottom: .75em
}

.prose :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em
}

.prose :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: .5em;
    padding-inline-start: 1.625em
}

.prose :where(hr+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h2+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h3+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h4+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0
}

.prose :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0
}

.prose :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-top: .5714286em;
    padding-inline-end: .5714286em;
    padding-bottom: .5714286em;
    padding-inline-start: .5714286em
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0
}

.prose :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(.prose>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(.prose>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0
}

.absolute {
    position: absolute
}

.relative {
    position: relative
}

.sticky {
    position: sticky
}

.bottom-0 {
    bottom: 0
}

.right-2 {
    right: .5rem
}

.right-4 {
    right: 1rem
}

.top-0 {
    top: 0
}

.top-2 {
    top: .5rem
}

.top-4 {
    top: 1rem
}

.z-10 {
    z-index: 10
}

.z-\[1\] {
    z-index: 1
}

.m-1 {
    margin: .25rem
}

.-mx-4 {
    margin-left: -1rem;
    margin-right: -1rem
}

.-my-1 {
    margin-top: -.25rem;
    margin-bottom: -.25rem
}

.mx-2 {
    margin-left: .5rem;
    margin-right: .5rem
}

.mx-4 {
    margin-left: 1rem;
    margin-right: 1rem
}

.mx-6 {
    margin-left: 1.5rem;
    margin-right: 1.5rem
}

.mx-auto {
    margin-left: auto;
    margin-right: auto
}

.my-16 {
    margin-top: 4rem;
    margin-bottom: 4rem
}

.my-24 {
    margin-top: 6rem;
    margin-bottom: 6rem
}

.my-32 {
    margin-top: 8rem;
    margin-bottom: 8rem
}

.my-5 {
    margin-top: 1.25rem;
    margin-bottom: 1.25rem
}

.my-8 {
    margin-top: 2rem;
    margin-bottom: 2rem
}

.my-auto {
    margin-top: auto;
    margin-bottom: auto
}

.-mb-2 {
    margin-bottom: -.5rem
}

.-mr-3 {
    margin-right: -.75rem
}

.-mt-10 {
    margin-top: -2.5rem
}

.-mt-3 {
    margin-top: -.75rem
}

.-mt-5 {
    margin-top: -1.25rem
}

.mb-1 {
    margin-bottom: .25rem
}

.mb-2 {
    margin-bottom: .5rem
}

.mb-3 {
    margin-bottom: .75rem
}

.mb-4 {
    margin-bottom: 1rem
}

.mb-5 {
    margin-bottom: 1.25rem
}

.mb-8 {
    margin-bottom: 2rem
}

.mb-auto {
    margin-bottom: auto
}

.mb-px {
    margin-bottom: 1px
}

.ml-10 {
    margin-left: 2.5rem
}

.ml-3 {
    margin-left: .75rem
}

.ml-5 {
    margin-left: 1.25rem
}

.ml-auto {
    margin-left: auto
}

.mr-1 {
    margin-right: .25rem
}

.mr-2 {
    margin-right: .5rem
}

.mr-3 {
    margin-right: .75rem
}

.mr-4 {
    margin-right: 1rem
}

.mr-auto {
    margin-right: auto
}

.mt-2 {
    margin-top: .5rem
}

.mt-20 {
    margin-top: 5rem
}

.mt-3 {
    margin-top: .75rem
}

.mt-4 {
    margin-top: 1rem
}

.mt-5 {
    margin-top: 1.25rem
}

.flex {
    display: flex
}

.table {
    display: table
}

.grid {
    display: grid
}

.hidden {
    display: none
}

.h-10 {
    height: 2.5rem
}

.h-16 {
    height: 4rem
}

.h-3 {
    height: .75rem
}

.h-4 {
    height: 1rem
}

.h-40 {
    height: 10rem
}

.h-44 {
    height: 11rem
}

.h-5 {
    height: 1.25rem
}

.h-80 {
    height: 20rem
}

.h-96 {
    height: 24rem
}

.h-full {
    height: 100%
}

.min-h-screen {
    min-height: 100vh
}

.w-10 {
    width: 2.5rem
}

.w-20 {
    width: 5rem
}

.w-24 {
    width: 6rem
}

.w-3 {
    width: .75rem
}

.w-3\/5 {
    width: 60%
}

.w-4 {
    width: 1rem
}

.w-5 {
    width: 1.25rem
}

.w-5\/12 {
    width: 41.666667%
}

.w-52 {
    width: 13rem
}

.w-60 {
    width: 15rem
}

.w-full {
    width: 100%
}

.min-w-full {
    min-width: 100%
}

.max-w-4xl {
    max-width: 56rem
}

.max-w-5xl {
    max-width: 64rem
}

.max-w-full {
    max-width: 100%
}

.max-w-xl {
    max-width: 36rem
}

.flex-1 {
    flex: 1 1 0%
}

.grow {
    flex-grow: 1
}

.transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.cursor-pointer {
    cursor: pointer
}

.resize {
    resize: both
}

.grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr))
}

.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr))
}

.flex-col {
    flex-direction: column
}

.place-items-center {
    place-items: center
}

.items-center {
    align-items: center
}

.justify-end {
    justify-content: flex-end
}

.justify-center {
    justify-content: center
}

.justify-between {
    justify-content: space-between
}

.gap-2 {
    gap: .5rem
}

.gap-20 {
    gap: 5rem
}

.gap-3 {
    gap: .75rem
}

.gap-4 {
    gap: 1rem
}

.gap-5 {
    gap: 1.25rem
}

.gap-6 {
    gap: 1.5rem
}

.overflow-hidden,
.truncate {
    overflow: hidden
}

.truncate {
    text-overflow: ellipsis;
    white-space: nowrap
}

.text-nowrap {
    text-wrap: nowrap
}

.rounded-box {
    border-radius: var(--rounded-box, 1rem)
}

.rounded-full {
    border-radius: 9999px
}

.rounded-md {
    border-radius: .375rem
}

.rounded-sm {
    border-radius: .125rem
}

.rounded-xl {
    border-radius: .75rem
}

.border {
    border-width: 1px
}

.border-b {
    border-bottom-width: 1px
}

.border-t {
    border-top-width: 1px
}

.border-foreground\/20 {
    border-color: hsl(var(--foreground)/.2)
}

.border-b-foreground\/10 {
    border-bottom-color: hsl(var(--foreground)/.1)
}

.border-t-foreground\/10 {
    border-top-color: hsl(var(--foreground)/.1)
}

.bg-background {
    background-color: hsl(var(--background))
}

.bg-base-100 {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)))
}

.bg-bilibili-blue {
    --tw-bg-opacity: 1;
    background-color: rgb(0 164 216/var(--tw-bg-opacity))
}

.bg-bilibili-pink {
    --tw-bg-opacity: 1;
    background-color: rgb(251 114 153/var(--tw-bg-opacity))
}

.bg-btn-background {
    background-color: hsl(var(--btn-background))
}

.bg-foreground\/10 {
    background-color: hsl(var(--foreground)/.1)
}

.bg-foreground\/20 {
    background-color: hsl(var(--foreground)/.2)
}

.bg-foreground\/5 {
    background-color: hsl(var(--foreground)/.05)
}

.bg-gray-500 {
    --tw-bg-opacity: 1;
    background-color: rgb(107 114 128/var(--tw-bg-opacity))
}

.bg-purple-950 {
    --tw-bg-opacity: 1;
    background-color: rgb(59 7 100/var(--tw-bg-opacity))
}

.bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255/var(--tw-bg-opacity))
}

.bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops))
}

.from-green-100 {
    --tw-gradient-from: #dcfce7 var(--tw-gradient-from-position);
    --tw-gradient-to: rgba(220, 252, 231, 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.from-transparent {
    --tw-gradient-from: transparent var(--tw-gradient-from-position);
    --tw-gradient-to: transparent var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.via-foreground\/10 {
    --tw-gradient-to: hsl(var(--foreground)/0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), hsl(var(--foreground)/0.1) var(--tw-gradient-via-position), var(--tw-gradient-to)
}

.to-blue-500 {
    --tw-gradient-to: #3b82f6 var(--tw-gradient-to-position)
}

.to-transparent {
    --tw-gradient-to: transparent var(--tw-gradient-to-position)
}

.fill-gray-400 {
    fill: #9ca3af
}

.p-2 {
    padding: .5rem
}

.p-3 {
    padding: .75rem
}

.p-4 {
    padding: 1rem
}

.p-8 {
    padding: 2rem
}

.p-\[1px\] {
    padding: 1px
}

.px-1 {
    padding-left: .25rem;
    padding-right: .25rem
}

.px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem
}

.px-2 {
    padding-left: .5rem;
    padding-right: .5rem
}

.px-3 {
    padding-left: .75rem;
    padding-right: .75rem
}

.px-4 {
    padding-left: 1rem;
    padding-right: 1rem
}

.px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem
}

.px-8 {
    padding-left: 2rem;
    padding-right: 2rem
}

.py-1 {
    padding-top: .25rem;
    padding-bottom: .25rem
}

.py-10 {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem
}

.py-2 {
    padding-top: .5rem;
    padding-bottom: .5rem
}

.py-4 {
    padding-top: 1rem;
    padding-bottom: 1rem
}

.py-6 {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem
}

.text-center {
    text-align: center
}

.text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem
}

.text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem
}

.text-5xl {
    font-size: 3rem;
    line-height: 1
}

.text-base {
    font-size: 1rem;
    line-height: 1.5rem
}

.text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem
}

.text-sm {
    font-size: .875rem;
    line-height: 1.25rem
}

.text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem
}

.text-xs {
    font-size: .75rem;
    line-height: 1rem
}

.font-bold {
    font-weight: 700
}

.font-medium {
    font-weight: 500
}

.font-semibold {
    font-weight: 600
}

.\!leading-tight {
    line-height: 1.25 !important
}

.text-black {
    --tw-text-opacity: 1;
    color: rgb(0 0 0/var(--tw-text-opacity))
}

.text-blue-400 {
    --tw-text-opacity: 1;
    color: rgb(96 165 250/var(--tw-text-opacity))
}

.text-foreground {
    color: hsl(var(--foreground))
}

.text-foreground\/80 {
    color: hsl(var(--foreground)/.8)
}

.text-foreground\/90 {
    color: hsl(var(--foreground)/.9)
}

.text-gray-400 {
    --tw-text-opacity: 1;
    color: rgb(156 163 175/var(--tw-text-opacity))
}

.text-green-400 {
    --tw-text-opacity: 1;
    color: rgb(74 222 128/var(--tw-text-opacity))
}

.text-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-p, oklch(var(--p)/var(--tw-text-opacity)))
}

.text-red-300 {
    --tw-text-opacity: 1;
    color: rgb(252 165 165/var(--tw-text-opacity))
}

.text-red-400 {
    --tw-text-opacity: 1;
    color: rgb(248 113 113/var(--tw-text-opacity))
}

.text-red-500 {
    --tw-text-opacity: 1;
    color: rgb(239 68 68/var(--tw-text-opacity))
}

.text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255/var(--tw-text-opacity))
}

.underline {
    text-decoration-line: underline
}

.no-underline {
    text-decoration-line: none
}

.opacity-0 {
    opacity: 0
}

.opacity-70 {
    opacity: .7
}

.opacity-80 {
    opacity: .8
}

.shadow {
    --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, .1), 0 1px 2px -1px rgba(0, 0, 0, .1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color)
}

.shadow,
.shadow-xl {
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow-xl {
    --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, .1), 0 8px 10px -6px rgba(0, 0, 0, .1);
    --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color)
}

.outline {
    outline-style: solid
}

.outline-primary {
    outline-color: var(--fallback-p, oklch(var(--p)/1))
}

.ring {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}

.ring-secondary {
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-s, oklch(var(--s)/var(--tw-ring-opacity)))
}

.ring-offset-base-100 {
    --tw-ring-offset-color: var(--fallback-b1, oklch(var(--b1)/1))
}

.filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.transition {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-duration: .15s
}

.transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-duration: .15s
}

.duration-300 {
    transition-duration: .3s
}

.ease-out {
    transition-timing-function: cubic-bezier(0, 0, .2, 1)
}

.animate-in {
    animation: animateIn .3s ease .15s both
}

@keyframes animateIn {
    0% {
        opacity: 0;
        transform: translateY(10px)
    }

    to {
        opacity: 1;
        transform: translateY(0)
    }
}

.gradient-blue {
    background: linear-gradient(135deg, #08d2fe, #00affe)
}

.gameImg {
    display: block;
    -webkit-user-select: none;
    margin: auto;
    background-color: #e6e6e6;
    transition: background-color .3s
}

.CodeMirror .cm-spell-error:not(.cm-url):not(.cm-comment):not(.cm-tag):not(.cm-word) {
    background: rgba(255, 0, 0, 0) !important
}

@media (min-width:640px) {
    .sm\:modal-middle {
        place-items: center
    }

    .sm\:modal-middle :where(.modal-box) {
        width: 91.666667%;
        max-width: 32rem;
        --tw-translate-y: 0px;
        --tw-scale-x: .9;
        --tw-scale-y: .9;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
        border-top-left-radius: var(--rounded-box, 1rem);
        border-top-right-radius: var(--rounded-box, 1rem);
        border-bottom-right-radius: var(--rounded-box, 1rem);
        border-bottom-left-radius: var(--rounded-box, 1rem)
    }
}

.hover\:scale-110:hover {
    --tw-scale-x: 1.1;
    --tw-scale-y: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.hover\:cursor-pointer:hover {
    cursor: pointer
}

.hover\:bg-bilibili-blue:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(0 164 216/var(--tw-bg-opacity))
}

.hover\:bg-btn-background-hover:hover {
    background-color: hsl(var(--btn-background-hover))
}

.hover\:bg-foreground\/10:hover {
    background-color: hsl(var(--foreground)/.1)
}

.hover\:text-white:hover {
    --tw-text-opacity: 1;
    color: rgb(255 255 255/var(--tw-text-opacity))
}

.hover\:underline:hover {
    text-decoration-line: underline
}

.peer:checked~.peer-checked\:line-through {
    text-decoration-line: line-through
}

.prose-a\:text-blue-400 :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
    --tw-text-opacity: 1;
    color: rgb(96 165 250/var(--tw-text-opacity))
}

.hover\:prose-a\:text-blue-600 :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))):hover {
    --tw-text-opacity: 1;
    color: rgb(37 99 235/var(--tw-text-opacity))
}

@media (min-width:640px) {
    .sm\:max-w-md {
        max-width: 28rem
    }

    .sm\:grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr))
    }

    .sm\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
    }
}

@media (min-width:768px) {
    .md\:h-96 {
        height: 24rem
    }

    .md\:grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr))
    }

    .md\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr))
    }

    .md\:px-20 {
        padding-left: 5rem;
        padding-right: 5rem
    }
}

@media (min-width:1024px) {
    .lg\:block {
        display: block
    }

    .lg\:flex {
        display: flex
    }

    .lg\:hidden {
        display: none
    }

    .lg\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
    }

    .lg\:grid-cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr))
    }

    .lg\:gap-10 {
        gap: 2.5rem
    }

    .lg\:px-0 {
        padding-left: 0;
        padding-right: 0
    }

    .lg\:text-4xl {
        font-size: 2.25rem;
        line-height: 2.5rem
    }
}

@media (min-width:1280px) {
    .xl\:w-4\/5 {
        width: 80%
    }

    .xl\:grid-cols-5 {
        grid-template-columns: repeat(5, minmax(0, 1fr))
    }

    .xl\:px-20 {
        padding-left: 5rem;
        padding-right: 5rem
    }
}

.Brand_brand__5z8jp {
    background: linear-gradient(112deg, #3c8ce7, #00eaff);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-family: Plus_Jakarta_Sans;
    font-size: 25px;
    font-style: normal;
    font-weight: 800;
    line-height: normal
}

.CodeMirror {
    font-family: monospace;
    height: 300px;
    color: #000;
    direction: ltr
}

.CodeMirror-lines {
    padding: 4px 0
}

.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
    padding: 0 4px
}

.CodeMirror-gutter-filler,
.CodeMirror-scrollbar-filler {
    background-color: #fff
}

.CodeMirror-gutters {
    border-right: 1px solid #ddd;
    background-color: #f7f7f7;
    white-space: nowrap
}

.CodeMirror-linenumber {
    padding: 0 3px 0 5px;
    min-width: 20px;
    text-align: right;
    color: #999;
    white-space: nowrap
}

.CodeMirror-guttermarker {
    color: #000
}

.CodeMirror-guttermarker-subtle {
    color: #999
}

.CodeMirror-cursor {
    border-left: 1px solid #000;
    border-right: none;
    width: 0
}

.CodeMirror div.CodeMirror-secondarycursor {
    border-left: 1px solid silver
}

.cm-fat-cursor .CodeMirror-cursor {
    width: auto;
    border: 0 !important;
    background: #7e7
}

.cm-fat-cursor div.CodeMirror-cursors {
    z-index: 1
}

.cm-fat-cursor .CodeMirror-line::selection,
.cm-fat-cursor .CodeMirror-line>span::selection,
.cm-fat-cursor .CodeMirror-line>span>span::selection {
    background: 0 0
}

.cm-fat-cursor .CodeMirror-line::-moz-selection,
.cm-fat-cursor .CodeMirror-line>span::-moz-selection,
.cm-fat-cursor .CodeMirror-line>span>span::-moz-selection {
    background: 0 0
}

.cm-fat-cursor {
    caret-color: transparent
}

@keyframes blink {
    50% {
        background-color: transparent
    }
}

.cm-tab {
    display: inline-block;
    text-decoration: inherit
}

.CodeMirror-rulers {
    position: absolute;
    left: 0;
    right: 0;
    top: -50px;
    bottom: 0;
    overflow: hidden
}

.CodeMirror-ruler {
    border-left: 1px solid #ccc;
    top: 0;
    bottom: 0;
    position: absolute
}

.cm-s-default .cm-header {
    color: #00f
}

.cm-s-default .cm-quote {
    color: #090
}

.cm-negative {
    color: #d44
}

.cm-positive {
    color: #292
}

.cm-header,
.cm-strong {
    font-weight: 700
}

.cm-em {
    font-style: italic
}

.cm-link {
    text-decoration: underline
}

.cm-strikethrough {
    text-decoration: line-through
}

.cm-s-default .cm-keyword {
    color: #708
}

.cm-s-default .cm-atom {
    color: #219
}

.cm-s-default .cm-number {
    color: #164
}

.cm-s-default .cm-def {
    color: #00f
}

.cm-s-default .cm-variable-2 {
    color: #05a
}

.cm-s-default .cm-type,
.cm-s-default .cm-variable-3 {
    color: #085
}

.cm-s-default .cm-comment {
    color: #a50
}

.cm-s-default .cm-string {
    color: #a11
}

.cm-s-default .cm-string-2 {
    color: #f50
}

.cm-s-default .cm-meta,
.cm-s-default .cm-qualifier {
    color: #555
}

.cm-s-default .cm-builtin {
    color: #30a
}

.cm-s-default .cm-bracket {
    color: #997
}

.cm-s-default .cm-tag {
    color: #170
}

.cm-s-default .cm-attribute {
    color: #00c
}

.cm-s-default .cm-hr {
    color: #999
}

.cm-s-default .cm-link {
    color: #00c
}

.cm-invalidchar,
.cm-s-default .cm-error {
    color: red
}

.CodeMirror-composing {
    border-bottom: 2px solid
}

div.CodeMirror span.CodeMirror-matchingbracket {
    color: #0b0
}

div.CodeMirror span.CodeMirror-nonmatchingbracket {
    color: #a22
}

.CodeMirror-matchingtag {
    background: rgba(255, 150, 0, .3)
}

.CodeMirror-activeline-background {
    background: #e8f2ff
}

.CodeMirror {
    position: relative;
    overflow: hidden;
    background: #fff
}

.CodeMirror-scroll {
    overflow: scroll !important;
    margin-bottom: -50px;
    margin-right: -50px;
    padding-bottom: 50px;
    height: 100%;
    outline: 0;
    position: relative;
    z-index: 0
}

.CodeMirror-sizer {
    position: relative;
    border-right: 50px solid transparent
}

.CodeMirror-gutter-filler,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-vscrollbar {
    position: absolute;
    z-index: 6;
    display: none;
    outline: 0
}

.CodeMirror-vscrollbar {
    right: 0;
    top: 0;
    overflow-x: hidden;
    overflow-y: scroll
}

.CodeMirror-hscrollbar {
    bottom: 0;
    left: 0;
    overflow-y: hidden;
    overflow-x: scroll
}

.CodeMirror-scrollbar-filler {
    right: 0;
    bottom: 0
}

.CodeMirror-gutter-filler {
    left: 0;
    bottom: 0
}

.CodeMirror-gutters {
    position: absolute;
    left: 0;
    top: 0;
    min-height: 100%;
    z-index: 3
}

.CodeMirror-gutter {
    white-space: normal;
    height: 100%;
    display: inline-block;
    vertical-align: top;
    margin-bottom: -50px
}

.CodeMirror-gutter-wrapper {
    position: absolute;
    z-index: 4;
    background: 0 0 !important;
    border: none !important
}

.CodeMirror-gutter-background {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 4
}

.CodeMirror-gutter-elt {
    position: absolute;
    cursor: default;
    z-index: 4
}

.CodeMirror-gutter-wrapper ::selection {
    background-color: transparent
}

.CodeMirror-gutter-wrapper ::-moz-selection {
    background-color: transparent
}

.CodeMirror-lines {
    cursor: text;
    min-height: 1px
}

.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
    border-radius: 0;
    border-width: 0;
    background: 0 0;
    font-family: inherit;
    font-size: inherit;
    margin: 0;
    white-space: pre;
    word-wrap: normal;
    line-height: inherit;
    color: inherit;
    z-index: 2;
    position: relative;
    overflow: visible;
    -webkit-tap-highlight-color: transparent;
    font-variant-ligatures: contextual
}

.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
    word-wrap: break-word;
    white-space: pre-wrap;
    word-break: normal
}

.CodeMirror-linebackground {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 0
}

.CodeMirror-linewidget {
    position: relative;
    z-index: 2;
    padding: .1px
}

.CodeMirror-code {
    outline: 0
}

.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber,
.CodeMirror-scroll,
.CodeMirror-sizer {
    box-sizing: content-box
}

.CodeMirror-measure {
    position: absolute;
    width: 100%;
    height: 0;
    overflow: hidden;
    visibility: hidden
}

.CodeMirror-cursor {
    position: absolute;
    pointer-events: none
}

.CodeMirror-measure pre {
    position: static
}

div.CodeMirror-cursors {
    visibility: hidden;
    position: relative;
    z-index: 3
}

.CodeMirror-focused div.CodeMirror-cursors,
div.CodeMirror-dragcursors {
    visibility: visible
}

.CodeMirror-selected {
    background: #d9d9d9
}

.CodeMirror-focused .CodeMirror-selected {
    background: #d7d4f0
}

.CodeMirror-crosshair {
    cursor: crosshair
}

.CodeMirror-line::selection,
.CodeMirror-line>span::selection,
.CodeMirror-line>span>span::selection {
    background: #d7d4f0
}

.CodeMirror-line::-moz-selection,
.CodeMirror-line>span::-moz-selection,
.CodeMirror-line>span>span::-moz-selection {
    background: #d7d4f0
}

.cm-searching {
    background-color: #ffa;
    background-color: rgba(255, 255, 0, .4)
}

.cm-force-border {
    padding-right: .1px
}

@media print {
    .CodeMirror div.CodeMirror-cursors {
        visibility: hidden
    }
}

.cm-tab-wrap-hack:after {
    content: ""
}

span.CodeMirror-selectedtext {
    background: 0 0
}

.EasyMDEContainer {
    display: block
}

.CodeMirror-rtl pre {
    direction: rtl
}

.EasyMDEContainer.sided--no-fullscreen {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap
}

.EasyMDEContainer .CodeMirror {
    box-sizing: border-box;
    height: auto;
    border: 1px solid #ced4da;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    padding: 10px;
    font: inherit;
    z-index: 0;
    word-wrap: break-word
}

.EasyMDEContainer .CodeMirror-scroll {
    cursor: text
}

.EasyMDEContainer .CodeMirror-fullscreen {
    background: #fff;
    position: fixed !important;
    top: 50px;
    left: 0;
    right: 0;
    bottom: 0;
    height: auto;
    z-index: 8;
    border-right: none !important;
    border-bottom-right-radius: 0 !important
}

.EasyMDEContainer .CodeMirror-sided {
    width: 50% !important
}

.EasyMDEContainer.sided--no-fullscreen .CodeMirror-sided {
    border-right: none !important;
    border-bottom-right-radius: 0;
    position: relative;
    flex: 1 1 auto
}

.EasyMDEContainer .CodeMirror-placeholder {
    opacity: .5
}

.EasyMDEContainer .CodeMirror-focused .CodeMirror-selected {
    background: #d9d9d9
}

.editor-toolbar {
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    user-select: none;
    padding: 9px 10px;
    border-top: 1px solid #ced4da;
    border-left: 1px solid #ced4da;
    border-right: 1px solid #ced4da;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px
}

.editor-toolbar.fullscreen {
    width: 100%;
    height: 50px;
    padding-top: 10px;
    padding-bottom: 10px;
    box-sizing: border-box;
    background: #fff;
    border: 0;
    position: fixed;
    top: 0;
    left: 0;
    opacity: 1;
    z-index: 9
}

.editor-toolbar.fullscreen:before {
    width: 20px;
    height: 50px;
    background: linear-gradient(90deg, #fff 0, hsla(0, 0%, 100%, 0));
    position: fixed;
    top: 0;
    left: 0;
    margin: 0;
    padding: 0
}

.editor-toolbar.fullscreen:after {
    width: 20px;
    height: 50px;
    background: linear-gradient(90deg, hsla(0, 0%, 100%, 0) 0, #fff);
    position: fixed;
    top: 0;
    right: 0;
    margin: 0;
    padding: 0
}

.EasyMDEContainer.sided--no-fullscreen .editor-toolbar {
    width: 100%
}

.editor-toolbar .easymde-dropdown,
.editor-toolbar button {
    background: 0 0;
    display: inline-block;
    text-align: center;
    text-decoration: none !important;
    height: 30px;
    margin: 0;
    padding: 0;
    border: 1px solid transparent;
    border-radius: 3px;
    cursor: pointer
}

.editor-toolbar button {
    font-weight: 700;
    min-width: 30px;
    padding: 0 6px;
    white-space: nowrap
}

.editor-toolbar button.active,
.editor-toolbar button:hover {
    background: #fcfcfc;
    border-color: #95a5a6
}

.editor-toolbar i.separator {
    display: inline-block;
    width: 0;
    border-left: 1px solid #d9d9d9;
    border-right: 1px solid #fff;
    color: transparent;
    text-indent: -10px;
    margin: 0 6px
}

.editor-toolbar button:after {
    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
    font-size: 65%;
    vertical-align: text-bottom;
    position: relative;
    top: 2px
}

.editor-toolbar button.heading-1:after {
    content: "1"
}

.editor-toolbar button.heading-2:after {
    content: "2"
}

.editor-toolbar button.heading-3:after {
    content: "3"
}

.editor-toolbar button.heading-bigger:after {
    content: "▲"
}

.editor-toolbar button.heading-smaller:after {
    content: "▼"
}

.editor-toolbar.disabled-for-preview button:not(.no-disable) {
    opacity: .6;
    pointer-events: none
}

@media only screen and (max-width:700px) {
    .editor-toolbar i.no-mobile {
        display: none
    }
}

.editor-statusbar {
    padding: 8px 10px;
    font-size: 12px;
    color: #959694;
    text-align: right
}

.EasyMDEContainer.sided--no-fullscreen .editor-statusbar {
    width: 100%
}

.editor-statusbar span {
    display: inline-block;
    min-width: 4em;
    margin-left: 1em
}

.editor-statusbar .lines:before {
    content: "lines: "
}

.editor-statusbar .words:before {
    content: "words: "
}

.editor-statusbar .characters:before {
    content: "characters: "
}

.editor-preview-full {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 7
}

.editor-preview-full,
.editor-preview-side {
    overflow: auto;
    display: none;
    box-sizing: border-box
}

.editor-preview-side {
    position: fixed;
    bottom: 0;
    width: 50%;
    top: 50px;
    right: 0;
    z-index: 9;
    border: 1px solid #ddd;
    word-wrap: break-word
}

.editor-preview-active-side {
    display: block
}

.EasyMDEContainer.sided--no-fullscreen .editor-preview-active-side {
    flex: 1 1 auto;
    height: auto;
    position: static
}

.editor-preview-active {
    display: block
}

.editor-preview {
    padding: 10px;
    background: #fafafa
}

.editor-preview>p {
    margin-top: 0
}

.editor-preview pre {
    background: #eee;
    margin-bottom: 10px
}

.editor-preview table td,
.editor-preview table th {
    border: 1px solid #ddd;
    padding: 5px
}

.cm-s-easymde .cm-tag {
    color: #63a35c
}

.cm-s-easymde .cm-attribute {
    color: #795da3
}

.cm-s-easymde .cm-string {
    color: #183691
}

.cm-s-easymde .cm-header-1 {
    font-size: calc(1.375rem + 1.5vw)
}

.cm-s-easymde .cm-header-2 {
    font-size: calc(1.325rem + .9vw)
}

.cm-s-easymde .cm-header-3 {
    font-size: calc(1.3rem + .6vw)
}

.cm-s-easymde .cm-header-4 {
    font-size: calc(1.275rem + .3vw)
}

.cm-s-easymde .cm-header-5 {
    font-size: 1.25rem
}

.cm-s-easymde .cm-header-6 {
    font-size: 1rem
}

.cm-s-easymde .cm-header-1,
.cm-s-easymde .cm-header-2,
.cm-s-easymde .cm-header-3,
.cm-s-easymde .cm-header-4,
.cm-s-easymde .cm-header-5,
.cm-s-easymde .cm-header-6 {
    margin-bottom: .5rem;
    line-height: 1.2
}

.cm-s-easymde .cm-comment {
    background: rgba(0, 0, 0, .05);
    border-radius: 2px
}

.cm-s-easymde .cm-link {
    color: #7f8c8d
}

.cm-s-easymde .cm-url {
    color: #aab2b3
}

.cm-s-easymde .cm-quote {
    color: #7f8c8d;
    font-style: italic
}

.editor-toolbar .easymde-dropdown {
    position: relative;
    border-radius: 0;
    border: 1px solid #fff
}

.editor-toolbar .easymde-dropdown,
.editor-toolbar .easymde-dropdown:hover {
    background: linear-gradient(to bottom right, #fff, #fff 84%, #333 0, #333)
}

.easymde-dropdown-content {
    display: block;
    visibility: hidden;
    position: absolute;
    background-color: #f9f9f9;
    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, .2);
    padding: 8px;
    z-index: 2;
    top: 30px
}

.easymde-dropdown:active .easymde-dropdown-content,
.easymde-dropdown:focus .easymde-dropdown-content,
.easymde-dropdown:focus-within .easymde-dropdown-content {
    visibility: visible
}

.easymde-dropdown-content button {
    display: block
}

span[data-img-src]:after {
    content: "";
    background-image: var(--bg-image);
    display: block;
    max-height: 100%;
    max-width: 100%;
    background-size: contain;
    height: 0;
    padding-top: var(--height);
    width: var(--width);
    background-repeat: no-repeat
}

.CodeMirror .cm-spell-error:not(.cm-url):not(.cm-comment):not(.cm-tag):not(.cm-word) {
    background: rgba(255, 0, 0, .15)
}

@font-face {
    font-family: __GeistSans_3a0388;
    src: url(/_next/static/media/e11418ac562b8ac1-s.p.woff2) format("woff2");
    font-display: swap;
    font-weight: 100 900
}

@font-face {
    font-family: __GeistSans_Fallback_3a0388;
    src: local("Arial");
    ascent-override: 85.83%;
    descent-override: 20.52%;
    line-gap-override: 9.33%;
    size-adjust: 107.19%
}

.__className_3a0388 {
    font-family: __GeistSans_3a0388, __GeistSans_Fallback_3a0388
}

.__variable_3a0388 {
    --font-geist-sans: "__GeistSans_3a0388", "__GeistSans_Fallback_3a0388"
}